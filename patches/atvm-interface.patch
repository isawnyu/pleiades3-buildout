diff -rub ATVocabularyManager/event.py ATVocabularyManager-patched/event.py
--- ATVocabularyManager/event.py	2006-12-23 13:29:17.000000000 -0700
+++ ATVocabularyManager-patched/event.py	2009-06-11 16:10:37.000000000 -0600
@@ -24,7 +24,7 @@
 def find_toplevel_vocab(obj):
     result = obj
     while hasattr(result, 'aq_parent'):
-        if isinstance(result.aq_parent.aq_base,
+        if isinstance(getattr(result.aq_parent, 'aq_base', None),
                       vocabularylib.VocabularyLibrary):
             return result
         result = result.aq_parent
Only in ATVocabularyManager-patched: event.py.rej
diff -rub ATVocabularyManager/namedvocabulary.py ATVocabularyManager-patched/namedvocabulary.py
--- ATVocabularyManager/namedvocabulary.py	2007-02-04 12:26:13.000000000 -0700
+++ ATVocabularyManager-patched/namedvocabulary.py	2009-06-11 21:08:51.000000000 -0600
@@ -14,8 +14,11 @@
 
 import Missing
 from AccessControl import ClassSecurityInfo
+
+from zope.interface import implements
+
 from Products.CMFCore.utils import getToolByName
-from Products.Archetypes.interfaces.vocabulary import IVocabulary
+from Products.Archetypes.interfaces import IVocabulary
 from Products.ATVocabularyManager.types.tree.vocabulary import TreeVocabulary
 
 try:
@@ -25,12 +28,11 @@
 
 from config import TOOL_NAME
 
-class NamedVocabulary:
+class NamedVocabulary(object):
+    implements(IVocabulary)
 
     vocab_name= None
 
-    __implements__ = (IVocabulary,)
-
     security = ClassSecurityInfo()
     security.setDefaultAccess('allow')
     # Add a class variable to avoid migration issues
@@ -90,7 +92,7 @@
         if vocab is None:
             raise KeyError('Vocabulary id not found in '+\
                              'portal_vocabularies : %s' % self.vocab_name)        
-        assert(IVocabulary.isImplementedBy(vocab))
+        assert(IVocabulary.providedBy(vocab))
         return vocab
 
     def getKeyPathForTerms(self, instance, terms=()):
Only in ATVocabularyManager-patched: namedvocabulary.py.orig
Only in ATVocabularyManager-patched: namedvocabulary.py.rej
diff -rub ATVocabularyManager/tools/vocabularylib.py ATVocabularyManager-patched/tools/vocabularylib.py
--- ATVocabularyManager/tools/vocabularylib.py	2007-08-24 03:12:29.000000000 -0600
+++ ATVocabularyManager-patched/tools/vocabularylib.py	2009-06-11 16:10:37.000000000 -0600
@@ -22,7 +22,7 @@
 from Products.CMFCore.permissions import View
 from Products.Archetypes.atapi import *
 from Products.Archetypes.AllowedTypesByIface import AllowedTypesByIfaceMixin
-from Products.Archetypes.interfaces.vocabulary import IVocabulary
+from Products.Archetypes.interfaces import IVocabulary
 from Products.ATVocabularyManager.config import TOOL_NAME
 from Products.ATVocabularyManager.config import DEFAULT_VOCABULARY_CONTAINER
 from Products.Archetypes.utils import shasattr
@@ -41,7 +41,7 @@
     pass
 
 ### note: derive somewhere in future from BaseTool
-class VocabularyLibrary(UniqueObject, AllowedTypesByIfaceMixin, OrderedBaseFolder, Cacheable):
+class VocabularyLibrary(UniqueObject, OrderedBaseFolder, Cacheable):
     '''
     This tool contains dynamic vocabularies to be used by Archetypes
     fields. It has methods to register special/custom vocabulary
@@ -54,7 +54,7 @@
     security = ClassSecurityInfo()
     portal_type = meta_type = 'VocabularyLibrary'
     archetype_name          = 'Vocabulary Library'
-    allowed_content_types   = ()
+    allowed_content_types   = ('VdexVocabulary', 'SimpleVocabulary', 'AliasVocabulary')
     allow_discussion        = False
     immediate_view          = 'vocabularytool_view'
     default_view            = 'vocabularytool_view'
diff -rub ATVocabularyManager/types/alias/vocabulary.py ATVocabularyManager-patched/types/alias/vocabulary.py
--- ATVocabularyManager/types/alias/vocabulary.py	2007-03-02 19:20:21.000000000 -0700
+++ ATVocabularyManager-patched/types/alias/vocabulary.py	2009-06-11 16:10:37.000000000 -0600
@@ -15,6 +15,8 @@
 import csv
 from StringIO import StringIO
 
+from zope.interface import implements
+
 from Products.ATVocabularyManager.config import *
 if HAS_LINGUA_PLONE:
     from Products.LinguaPlone.public import *
@@ -23,13 +25,13 @@
 
 from AccessControl import ClassSecurityInfo
 from Products.CMFCore.utils import getToolByName
-from Products.Archetypes.interfaces.vocabulary import IVocabulary
+from Products.Archetypes.interfaces import IVocabulary
 from Products.ATVocabularyManager.tools import registerVocabularyContainer
 from Products.ATVocabularyManager.config import TOOL_NAME as VOCABTOOL_NAME
 
 class AliasVocabulary(BaseContent):
 
-    __implements__ = getattr(BaseContent,'__implements__',()) + (IVocabulary,)
+    implements(IVocabulary)
 
     security = ClassSecurityInfo()
     portal_type = meta_type = 'AliasVocabulary'
diff -rub ATVocabularyManager/types/vdex/vocabulary.py ATVocabularyManager-patched/types/vdex/vocabulary.py
--- ATVocabularyManager/types/vdex/vocabulary.py	2007-08-22 06:29:39.000000000 -0600
+++ ATVocabularyManager-patched/types/vdex/vocabulary.py	2009-06-11 16:10:37.000000000 -0600
@@ -15,6 +15,7 @@
 __docformat__ = 'plaintext'
 
 from StringIO import StringIO
+from zope.interface import implements
 from types import StringTypes
 from xml.dom import minidom
 from xml.dom.domreg import getDOMImplementation
@@ -23,7 +24,7 @@
 from Products.CMFCore  import permissions
 from Products.CMFCore.utils import getToolByName
 from Products.Archetypes.atapi import *
-from Products.Archetypes.interfaces.vocabulary import IVocabulary
+from Products.Archetypes.interfaces import IVocabulary
 from Products.Archetypes.utils import OrderedDict
 from Products.ATVocabularyManager.tools.vocabularylib import registerVocabularyContainer
 from Products.ATVocabularyManager.types.vdex.schemata import vocabulary_schema as schema
@@ -98,7 +99,7 @@
 class VdexVocabulary(OrderedBaseFolder,BaseContent,VdexTermHandlerMixin):
     """ content type providing a VDEX compliant vocabulary """
 
-    __implements__ = getattr(OrderedBaseFolder,'__implements__',()) + (IVocabulary,)
+    implements(IVocabulary)
 
     security = ClassSecurityInfo()
     portal_type = meta_type = 'VdexVocabulary'
