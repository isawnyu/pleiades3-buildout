# Pleiades test-production buildout. Should be further customized for actual production.
[home]
eggcarton = /home/zope/pleiades/eggcarton

[buildout]
extends = buildout.cfg production-versions.cfg
parts +=
# The ZEO server
    zeoserver
# The unmonitored, unbalanced admin instance
    instance1
# The balanced worker instances
    instance2
    instance3
    instance4
    instance5
# Debug and script instance
    debug-instance
# Nginx
    nginx-build
    balancer
# Varnish
    varnish-build
    cache
# Management
    logrotate.conf
    supervisor

[downloads]
nginx = http://nginx.org/download/nginx-1.0.15.tar.gz
varnish = http://repo.varnish-cache.org/source/varnish-2.1.5.tar.gz

[instance-settings]
environment-vars =
    LD_LIBRARY_PATH ${libgeos:location}/lib:${libxml2:location}/lib:${libxslt:location}/lib
    VAYTROU_URI http://localhost:8887
eggs =
    ${buildout:eggs}
    ${pyproj:eggs}
    ${shapely:egg}
    ${ctypes:egg}
    plone.app.ldap
    Products.PloneLDAP
    pleiades.vaytrouindex
    pleiades.neighbors
    ZPublisherEventsBackport
    plone.app.blob
    Products.PloneHotfix20121106
zcml =
    pleiades.policy
    plone.app.ldap
    pleiades.notredame
    pleiades.sitemap
    pleiades.placematch
    pleiades.vaytrouindex
    pleiades.neighbors
    archetypes.referencebrowserwidget
    pleiades.reconciliation
    pleiades.iterate
    pleiades.portlet.flickr
    pleiades.portlet.pelagios
products =
    ${buildout:directory}/products
    ${productdistros:location}
user = admin:xxxxx
zodb-cache-size = 5000
zeo-client-cache-size = 300MB
debug-mode = off
zope2-location = ${zope2:location}
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
effective-user = ${users:zope}
http-address = $${:http-address}
blob-storage = ${zeoserver:zeo-var}/blobstorage
shared-blob-dir = on

[supervisor-settings]
user = admin
password = xxxx

[plone-sites]
main = plone

[hosts]
main = pleiades.stoa.org
cache = atlantides.org
supervisor = atlantides.org
balancer = atlantides.org
instance1 = atlantides.org
instance2 = atlantides.org
instance3 = atlantides.org
instance4 = atlantides.org
instance5 = atlantides.org
debug-instance = 127.0.0.1
dump-instance = 127.0.0.1

[ports]
main = 80
cache = 8101
balancer = 8201
zeo-server = 8301
instance1 = 8080
instance2 = 8402
instance3 = 8403
instance4 = 8404
instance5 = 8405
debug-instance = 8406
supervisor = 9901

[users]
cache = zope
balancer = zope
zope = zope
supervisor = zope

[zeoserver]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}
zeo-address = ${ports:zeo-server}
effective-user = ${users:zope}
zeo-var = ${buildout:directory}/var
blob-storage = ${zeoserver:zeo-var}/blobstorage
eggs = plone.app.blob
pack-days = 7

[instance1]
<= instance-settings
recipe = plone.recipe.zope2instance
http-address = ${hosts:instance1}:${ports:instance1}

[instance2]
<= instance-settings
recipe = plone.recipe.zope2instance
http-address = ${hosts:instance2}:${ports:instance2}
zope-conf-additional +=
    enable-product-installation false

[instance3]
<= instance-settings
recipe = plone.recipe.zope3instance
http-address = ${hosts:instance3}:${ports:instance3}
zope-conf-additional +=
    enable-product-installation false

[instance4]
<= instance-settings
recipe = plone.recipe.zope4instance
http-address = ${hosts:instance4}:${ports:instance4}
zope-conf-additional +=
    enable-product-installation false

[instance5]
<= instance-settings
recipe = plone.recipe.zope5instance
http-address = ${hosts:instance5}:${ports:instance5}
zope-conf-additional +=
    enable-product-installation false

[debug-instance]
<= instance-settings
recipe = plone.recipe.zope2instance
http-address = ${hosts:debug-instance}:${ports:debug-instance}
zope-conf-additional +=
    enable-product-installation false

[nginx-build]
recipe = zc.recipe.cmmi
url = ${downloads:nginx}

[varnish-build]
recipe = zc.recipe.cmmi
url = ${downloads:varnish}

[cache]
recipe = plone.recipe.varnish
daemon = ${buildout:directory}/parts/varnish-build/sbin/varnishd
bind = ${hosts:cache}:${ports:cache}
backends = ${hosts:balancer}:${ports:balancer}
cache-size = 1G
user = ${users:cache}
mode = foreground
config = ${buildout:directory}/etc/varnish.vcl

[balancer]
recipe = gocept.nginx
nginx = nginx-build
configuration = 
    user ${users:balancer};
    error_log ${buildout:directory}/var/log/balancer-error.log warn;
    worker_processes 1;
    daemon off; 
    events {
        worker_connections 1024;
    }
    http {
        upstream zope {
            server ${hosts:instance2}:${ports:instance2} max_fails=3 fail_timeout=30s;
            server ${hosts:instance3}:${ports:instance3} max_fails=3 fail_timeout=30s;
            server ${hosts:instance4}:${ports:instance4} max_fails=3 fail_timeout=30s;
            server ${hosts:instance5}:${ports:instance5} max_fails=3 fail_timeout=30s;
        }
        server {
            listen ${hosts:balancer}:${ports:balancer};
            server_name ${hosts:balancer};
            access_log off;
            rewrite ^/(.*)  /VirtualHostBase/http/${hosts:main}:${ports:main}/${plone-sites:main}/VirtualHostRoot/$1 last;
            location / {
                proxy_pass http://zope;
            }
        }
    }
    
[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${supervisor-settings:user}
password = ${supervisor-settings:password}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 vtpleiades3 (environment=LD_LIBRARY_PATH="/home/zope/vaytrou/parts/libgeos/lib:/home/zope/vaytrou/parts/libspatialindex/lib",stdout_logfile=/home/zope/vaytrou/vtdata/pleiades3-three/log/vaytrou.log,stdout_logfile_maxbytes=50MB,stdout_logfile_backups=10,stderr_logfile=/home/zope/vaytrou/vtdata/pleiades3-three/log/vaytrou-error.log,stderr_logfile_backups=10) /home/zope/vaytrou/bin/python [scripts/vtserve -d vtdata pleiades3-three -p 8887] /home/zope/vaytrou false ${users:zope}
    10 zeo         ${zeoserver:location}/bin/runzeo                  true ${users:zope}
    20 instance1   ${buildout:directory}/parts/instance1/bin/runzope true ${users:zope}
    20 instance2   ${buildout:directory}/parts/instance2/bin/runzope true ${users:zope}
    20 instance3   ${buildout:directory}/parts/instance3/bin/runzope true ${users:zope}
    20 instance4   ${buildout:directory}/parts/instance4/bin/runzope true ${users:zope}
    20 instance1   ${buildout:directory}/parts/instance5/bin/runzope true ${users:zope}
    30 cache       ${buildout:directory}/bin/cache                   true ${users:cache}
    40 balancer    ${nginx-build:location}/sbin/nginx [-c ${balancer:run-directory}/balancer.conf] true ${users:balancer}

[logrotate.conf]
recipe = zc.recipe.deployment:configuration
text = 
    rotate 4
    weekly
    create
    compress
    delaycompress

    ${buildout:directory}/var/log/instance1*.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance1.pid)
        endscript
    }
    
    ${buildout:directory}/var/log/instance2*.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance2.pid)
        endscript
    }
   
    ${buildout:directory}/var/log/instance3*.log {
        sharedscripts
        postrotate
            /bin/kill -USR3 $(cat ${buildout:directory}/var/instance3.pid)
        endscript
    }

    ${buildout:directory}/var/log/instance4*.log {
        sharedscripts
        postrotate
            /bin/kill -USR4 $(cat ${buildout:directory}/var/instance4.pid)
        endscript
    }

    ${buildout:directory}/var/log/instance5*.log {
        sharedscripts
        postrotate
            /bin/kill -USR5 $(cat ${buildout:directory}/var/instance5.pid)
        endscript
    }

    ${buildout:directory}/var/log/zeoserver.log {
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/zeoserver.pid)
        endscript
    }
    
    ${buildout:directory}/var/log/balancer*.log {
        sharedscripts
        postrotate
            /bin/kill -USR1 $(cat ${balancer:run-directory}/balancer.pid)
        endscript
    }
